name: Build

on:
  push:
    branches:
      - master
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  master:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [master]
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: master

      - uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Cache npm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.24.3
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - run: pnpx commitlint --from HEAD~${{ github.event.pull_request.commits }} --to HEAD --verbose

      - run: pnpx nx-cloud start-ci-run

      - run: pnpx nx affected --target=build --parallel --max-parallel=3

      - run: pnpx nx affected --target=lint --parallel --max-parallel=3

      - run: pnpx nx affected --target=test --parallel --max-parallel=2

      - run: pnpx nx-cloud stop-all-agents
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [master]
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: master

      - uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Cache npm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.24.3
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      - run: pnpx commitlint --from HEAD~${{ github.event.pull_request.commits }} --to HEAD --verbose

      - run: pnpx nx-cloud start-ci-run

      - run: pnpx nx affected --target=build --parallel --max-parallel=3

      - run: pnpx nx affected --target=lint --parallel --max-parallel=3

      - run: pnpx nx affected --target=test --parallel --max-parallel=2

      - run: pnpx nx-cloud stop-all-agents
  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    strategy:
      matrix:
        agent: [ 1, 2, 3 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Cache npm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.24.3
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
